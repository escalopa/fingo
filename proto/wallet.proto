syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/escalopa/fingo/pb";

package pb;

enum TransferType {
  UNKNOWN = 0;
  DEPOSIT = 1;
  WITHDRAW = 2;
  TRANSFER = 3;
}

enum Currency {
  UNDEFINED = 0;
  EGP =1;
  USD =2;
  EUR =3;
  RUB =4;
  GBP =5;
}

// CreateWallet
message CreateWalletRequest {
  Currency currency = 1;
  string name =2;
}
message CreateWalletResponse {
  uint32 wallet_id =1;
}

// Transfer
message TransferRequest {
  TransferType type = 1;
  double amount = 2;
  int32 wallet_id =3;
  optional int32 recipient =4; // wallet_id of recipient, Is required for transfer type only
}
message TransferResponse {
  double balance =1;
}

// RollbackTransfer
message RollbackTransferRequest {
  uint32 transaction_id =1;
}
message RollbackTransferResponse {
  double balance =1;
}

// GetWallets
message GetWalletsRequest {} // user id is taken from the context
message GetWalletsResponse {
  message Wallet {
    uint32 id =1;
    string name =2;
    double balance =3;
    Currency currency =4;
  }
  repeated Wallet wallets =1;
}

// GetTransactionHistory
message GetTransactionHistoryRequest {
  int32 wallet_id =1;

}
message GetTransactionHistoryResponse {
  message Transaction {
    uint32 id =1;
    double amount =2;
    TransferType type =3;
    optional int32 recipient =4; // On withdraw equal -1, on deposit equal -2
    optional string recipient_name =5;  // On withdraw and deposit equal ""
    google.protobuf.Timestamp timestamp =6;
  }
  repeated Transaction transactions =1;
}

service WalletService {
  // Mutators
  rpc CreateWallet(CreateWalletRequest) returns (CreateWalletResponse);
  rpc Transfer(TransferRequest) returns (TransferResponse);
  rpc RollbackTransfer(RollbackTransferRequest) returns (RollbackTransferResponse);
  // Getters
  rpc GetWallets(GetWalletsRequest) returns (GetWalletsResponse);
  rpc GetTransactionHistory(GetTransactionHistoryRequest) returns (stream GetTransactionHistoryResponse);
}
