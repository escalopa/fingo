syntax = "proto3";

import "basic.proto";
import "user.proto";

option go_package = "github.com/escalopa/gochat/pb";

package pb;

// Signup
message SignupRequest {
  string name = 1;
  string username = 2;
  string email = 3;
  string password = 4;
}
message SignupResponse {
  BasicResponse response = 1;
}

// Signin
message SigninRequest {
  string email = 1;
  string password = 2;
  map<string, string> metadata = 3; // Client-IP, User-Agent
}
message SigninResponse {
  string accessToken = 1;
  string refreshToken = 2;
  BasicResponse response = 5;
}

// Logout
message LogoutRequest {
  string accessToken = 1;
}
message LogoutResponse {
  BasicResponse response = 5;
}

// SendUserCode
message SendUserCodeRequest {
  string email = 1;
}
message SendUserCodeResponse {
  BasicResponse response = 1;
}

// VerifyUserCode
message VerifyUserCodeRequest {
  string email = 1;
  string code = 2;
}
message VerifyUserCodeResponse {
  BasicResponse response = 1;
}

// VerifyToken
message VerifyTokenRequest {
  string access_token = 1;
}
message VerifyTokenResponse {
  User user = 1;
  BasicResponse response = 2;
}

// RenewAccessToken
message RenewAccessTokenRequest {
  string refresh_token = 1;
}
message RenewAccessTokenResponse {
  string new_access_token = 1;
  BasicResponse response = 2;
}

service AuthService {
  // Auth
  rpc Signup(SignupRequest) returns (SignupResponse);
  rpc Signin(SigninRequest) returns (SigninResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  // Contact with email service
  rpc SendUserCode(SendUserCodeRequest) returns (SendUserCodeResponse);
  rpc VerifyUserCode(VerifyUserCodeRequest) returns (VerifyUserCodeResponse);
  // Token verifying & renewing
  rpc VerifyAccessToken(VerifyTokenRequest) returns (VerifyTokenResponse);
  rpc RenewAccessToken(RenewAccessTokenRequest) returns (RenewAccessTokenResponse);
}
