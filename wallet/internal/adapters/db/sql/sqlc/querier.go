// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package sqlc

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

type Querier interface {
	AddAccountBalance(ctx context.Context, db DBTX, arg AddAccountBalanceParams) error
	CreateAccount(ctx context.Context, db DBTX, arg CreateAccountParams) (sql.Result, error)
	CreateCard(ctx context.Context, db DBTX, arg CreateCardParams) (sql.Result, error)
	CreateTransaction(ctx context.Context, db DBTX, arg CreateTransactionParams) error
	CreateUser(ctx context.Context, db DBTX, externalID uuid.UUID) error
	DeleteAccount(ctx context.Context, db DBTX, id int64) error
	DeleteAccountCards(ctx context.Context, db DBTX, accountID int64) error
	DeleteCard(ctx context.Context, db DBTX, number string) error
	GetAccount(ctx context.Context, db DBTX, id int64) (Account, error)
	GetAccountCards(ctx context.Context, db DBTX, accountID int64) ([]Card, error)
	GetAccounts(ctx context.Context, db DBTX, userID int64) ([]Account, error)
	GetCard(ctx context.Context, db DBTX, number string) (Card, error)
	GetCardBalance(ctx context.Context, db DBTX, number string) (float64, error)
	GetCurrencyByID(ctx context.Context, db DBTX, id int16) (Currency, error)
	GetCurrencyByName(ctx context.Context, db DBTX, name string) (int16, error)
	GetTransaction(ctx context.Context, db DBTX, id uuid.UUID) (GetTransactionRow, error)
	GetTransactions(ctx context.Context, db DBTX, arg GetTransactionsParams) ([]GetTransactionsRow, error)
	GetUserByExternalID(ctx context.Context, db DBTX, externalID uuid.UUID) (int64, error)
	GetUserCards(ctx context.Context, db DBTX, userID int64) ([]GetUserCardsRow, error)
	SetTransactionRolledBack(ctx context.Context, db DBTX, id uuid.UUID) error
	SubAccountBalance(ctx context.Context, db DBTX, arg SubAccountBalanceParams) error
}

var _ Querier = (*Queries)(nil)
