// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: user.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users(external_id)
VALUES ($1)
RETURNING id
`

func (q *Queries) CreateUser(ctx context.Context, db DBTX, externalID uuid.UUID) error {
	_, err := db.ExecContext(ctx, createUser, externalID)
	return err
}

const getUserByExternalID = `-- name: GetUserByExternalID :one
SELECT id
FROM users
WHERE external_id = $1
`

func (q *Queries) GetUserByExternalID(ctx context.Context, db DBTX, externalID uuid.UUID) (int32, error) {
	row := db.QueryRowContext(ctx, getUserByExternalID, externalID)
	var id int32
	err := row.Scan(&id)
	return id, err
}
