version: "3.8"

services:
  auth:
    container_name: "auth"
    restart: unless-stopped
    volumes:
      - .:/go/src/github.com/escalopa/gochat/
    environment:
      - AUTH_DATABASE_URL=${AUTH_DATABASE_URL}
      - AUTH_DATABASE_MIGRATION_PATH=${AUTH_DATABASE_MIGRATION_PATH}
      - AUTH_CACHE_URL=${AUTH_CACHE_URL}
      - AUTH_GRPC_PORT=${AUTH_GRPC_PORT}
      - AUTH_TOKEN_SECRET=${AUTH_TOKEN_SECRET}
      - AUTH_TOKEN_ACCESS_DURATION=${AUTH_TOKEN_ACCESS_DURATION}
      - AUTH_EMAIL_GRPC_URL=${AUTH_EMAIL_GRPC_URL}
    ports:
      - "${AUTH_GRPC_PORT}:${AUTH_GRPC_PORT}"
    build:
      context: .
      dockerfile: ./_deployments/Dockerfile.auth
      target: development
    depends_on:
      - cache
      - email
      - postgres

  email:
    container_name: "email"
    restart: unless-stopped
    volumes:
      - .:/go/src/github.com/escalopa/gochat/
    environment:
      - EMAIL_CACHE_URL=${EMAIL_CACHE_URL}
      - EMAIL_GRPC_PORT=${EMAIL_GRPC_PORT}
      - CODE_LENGTH=${CODE_LENGTH}
      - CODE_EXPIRATION=${CODE_EXPIRATION}
      - MIN_SEND_INTERVAL=${MIN_SEND_INTERVAL}
      - COURIER_TOKEN=${COURIER_TOKEN}
      - COURIER_VERIFICATION_TEMPLATE_ID=${COURIER_VERIFICATION_TEMPLATE_ID}
    ports:
      - "${EMAIL_GRPC_PORT}:${EMAIL_GRPC_PORT}"
    build:
      context: .
      dockerfile: _deployments/Dockerfile.contact
      target: development
    depends_on:
        - cache

  cache:
    image: redis:alpine
    container_name: "cache"
    restart: unless-stopped
    volumes:
      - cache:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  postgres:
      user: "0"
      image: postgres:12.8
      container_name: "pg"
      env_file:
        - ./.db.env
      ports:
        - "5432:5432"
      volumes:
        - pg:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 5s
        timeout: 5s
        retries: 5
volumes:
  cache:
  pg:
